<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


	<!-- 判断是插入哪个数据库 -->

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.yazuo.erp.train.dao.TraQuestionOptionDao">

	<resultMap id="TraQuestionOption" type="com.yazuo.erp.train.vo.TraQuestionOptionVO">
        <result property="id" column="id"/>
        <result property="questionId" column="question_id"/>
        <result property="optionContent" column="option_content"/>
        <result property="refAnswer" column="ref_answer"/>
        <result property="isRight" column="is_right"/>
        <result property="insertBy" column="insert_by"/>
        <result property="insertTime" column="insert_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="traquestionoptionColumns">
	    <![CDATA[
		id,question_id,option_content,ref_answer,is_right,insert_by,insert_time,update_by,update_time
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="saveTraQuestionOption">
    <![CDATA[
        INSERT INTO train.tra_question_option (
        		question_id ,
        		option_content ,
        		ref_answer ,
        		is_right ,
        		insert_by ,
        		insert_time ,
        		update_by ,
        		update_time 
        ) VALUES (
        	#{questionId} ,
        	#{optionContent} ,
        	#{refAnswer} ,
        	#{isRight} ,
        	#{insertBy} ,
        	current_timestamp(3) ,
        	#{updateBy} ,
        	current_timestamp(3)
        )
    ]]>
	</insert>
	
	<update id="updateTraQuestionOption" >
    <![CDATA[
        UPDATE train.tra_question_option SET
	        question_id = #{questionId} ,
	        option_content = #{optionContent} ,
	        ref_answer = #{refAnswer} ,
	        is_right = #{isRight} ,
	        insert_by = #{insertBy} ,
	        insert_time = #{insertTime} ,
	        update_by = #{updateBy} ,
	        update_time = #{updateTime} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="deleteTraQuestionOption">
    <![CDATA[
        DELETE FROM train.tra_question_option WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getTraQuestionOptionById" resultMap="TraQuestionOption">
		SELECT <include refid="traquestionoptionColumns" />
	    <![CDATA[
		    FROM train.tra_question_option 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<select id="getTraQuestionOptions" resultMap="TraQuestionOption" parameterType="map">
		SELECT <include refid="traquestionoptionColumns" />
	    <![CDATA[
		    FROM train.tra_question_option  
	    ]]>
	    <include refid="traquestionoption_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	    <![CDATA[
		     limit #{pageSize} offset #{offset}; 
	    ]]>
	</select>
	
	<!-- 同上，唯一不同为返回值对于每一个元素是一个原生的map -->
	<select id="getTraQuestionOptionsMap" resultType="map" parameterType="map">
		SELECT <include refid="traquestionoptionColumns" />
	    <![CDATA[
		    FROM train.tra_question_option  
	    ]]>
	    <include refid="traquestionoption_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	    <![CDATA[
		     limit #{pageSize} offset #{offset}; 
	    ]]>
	</select>
	
	<select id="getAllTraQuestionOptions" resultType="map" parameterType="map">
		SELECT <include refid="traquestionoptionColumns" />
	    <![CDATA[
		    FROM train.tra_question_option  
	    ]]>
	    <include refid="traquestionoption_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	</select>

    <select id="getTraQuestionOptionsByQuestionIds" parameterType="list" resultMap="TraQuestionOption">
        SELECT <include refid="traquestionoptionColumns"/>
        FROM train.tra_question_option
        WHERE question_id in <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </select>
	
	<sql id="traquestionoption_findPage_where">
		<where>
	       <if test="id!=null">
				AND id = #{id}
			</if>
	       <if test="questionId!=null">
				AND question_id = #{questionId}
			</if>
	       <if test="optionContent!=null">
				AND option_content = #{optionContent}
			</if>
	       <if test="refAnswer!=null">
				AND ref_answer = #{refAnswer}
			</if>
	       <if test="isRight!=null">
				AND is_right = #{isRight}
			</if>
	       <if test="insertBy!=null">
				AND insert_by = #{insertBy}
			</if>
	       <if test="insertTimeBegin!=null">
				AND insert_time >= #{insertTimeBegin}
		   </if>
		   <if test="insertTimeEnd!=null">
				AND insert_time &lt;= #{insertTimeEnd}
		   </if>
	       <if test="updateBy!=null">
				AND update_by = #{updateBy}
			</if>
	       <if test="updateTimeBegin!=null">
				AND update_time >= #{updateTimeBegin}
		   </if>
		   <if test="updateTimeEnd!=null">
				AND update_time &lt;= #{updateTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="getTraQuestionOptionCount" resultType="long">
        SELECT count(*) FROM train.tra_question_option 
		<include refid="traquestionoption_findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findTraQuestionOptionPage" resultMap="TraQuestionOption">
    	SELECT <include refid="traquestionoptionColumns" />
	    FROM train.tra_question_option 
		<include refid="traquestionoption_findPage_where"/>
		<if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
    </select>

    <insert id="batchSaveQuestionOption" parameterType="list" useGeneratedKeys="true">
        INSERT INTO train.tra_question_option (
        		question_id ,
        		option_content ,
        		ref_answer ,
        		is_right ,
        		insert_by ,
        		insert_time ,
        		update_by ,
        		update_time 
        ) VALUES
        <foreach collection="list" item="t" index="index" open="" close="" separator=",">
	       (#{t.questionId},#{t.optionContent},#{t.refAnswer},#{t.isRight},#{t.insertBy},now(),#{t.updateBy},now())
	    </foreach>
	</insert>
	
	<delete id="deleteTraQuestionOptionByQuestionId">
    <![CDATA[
        DELETE FROM train.tra_question_option WHERE
        question_id = #{questionId} 
    ]]>
    </delete>
 
</mapper>


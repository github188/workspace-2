<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


	<!-- 判断是插入哪个数据库 -->

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.yazuo.erp.train.dao.TraCourseDao">

	<resultMap id="TraCourse" type="com.yazuo.erp.train.vo.TraCourseVO">
        <result property="id" column="id"/>
        <result property="courseName" column="course_name"/>
        <result property="timeLimit" column="time_limit"/>
        <result property="isEnable" column="is_enable"/>
        <result property="remark" column="remark"/>
        <result property="insertBy" column="insert_by"/>
        <result property="insertTime" column="insert_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="tracourseColumns">
	    <![CDATA[
		id,course_name,time_limit,is_enable,remark,insert_by,insert_time,update_by,update_time
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="saveTraCourse" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO train.tra_course (
        		course_name ,
        		time_limit ,
        		is_enable ,
        		remark ,
        		insert_by ,
        		insert_time ,
        		update_by ,
        		update_time 
        ) VALUES (
        	#{courseName} ,
        	#{timeLimit} ,
        	#{isEnable} ,
        	#{remark} ,
        	#{insertBy} ,
        	now() ,
        	#{updateBy} ,
        	now() 
        )
    ]]>
	</insert>
	
	<update id="updateTraCourse" >
    <![CDATA[
        UPDATE train.tra_course SET
	        course_name = #{courseName} ,
	        time_limit = #{timeLimit} ,
	        update_by = #{updateBy} ,
	        update_time = now() 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="deleteTraCourse">
    <![CDATA[
        DELETE FROM train.tra_course WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getTraCourseById" resultMap="TraCourse">
		SELECT <include refid="tracourseColumns" />
	    <![CDATA[
		    FROM train.tra_course 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<select id="getTraCourses" resultType="map"  parameterType="map">
		SELECT <include refid="tracourseColumns" />
	    <![CDATA[
		    FROM train.tra_course  
	    ]]>
	    <include refid="tracourse_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	   
	</select>
	
	<!-- 同上，唯一不同为返回值对于每一个元素是一个原生的map -->
	<select id="getTraCoursesMap" resultType="map" parameterType="map">
		SELECT <include refid="tracourseColumns" />
	    <![CDATA[
		    FROM train.tra_course  
	    ]]>
	    <include refid="tracourse_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	    <![CDATA[
		     limit #{pageSize} offset #{offset}; 
	    ]]>
	</select>
	
	<select id="getAllTraCourses" resultType="map" parameterType="map">
		SELECT <include refid="tracourseColumns" />
	    <![CDATA[
		    FROM train.tra_course  
	    ]]>
	    <include refid="tracourse_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<sql id="tracourse_findPage_where">
		<where>	      				
	       <if test="id!=null">
				AND id = #{id}
			</if>
	       <if test="courseName!=null">
				AND course_name = #{courseName}
			</if>
	       <if test="timeLimit!=null">
				AND time_limit = #{timeLimit}
			</if>
	       <if test="isEnable!=null">
				AND is_enable = #{isEnable}
			</if>
	       <if test="remark!=null">
				AND remark = #{remark}
			</if>
	       <if test="insertBy!=null">
				AND insert_by = #{insertBy}
			</if>
	       <if test="insertTimeBegin!=null">
				AND insert_time >= #{insertTimeBegin}
		   </if>
		   <if test="insertTimeEnd!=null">
				AND insert_time &lt;= #{insertTimeEnd}
		   </if>
	       <if test="updateBy!=null">
				AND update_by = #{updateBy}
			</if>
	       <if test="updateTimeBegin!=null">
				AND update_time >= #{updateTimeBegin}
		   </if>
		   <if test="updateTimeEnd!=null">
				AND update_time &lt;= #{updateTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="getTraCourseCount" resultType="long">
        SELECT count(*) FROM train.tra_course 
		<include refid="tracourse_findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findTraCoursePage" resultMap="TraCourse">
    	SELECT <include refid="tracourseColumns" />
	    FROM train.tra_course 
		<include refid="tracourse_findPage_where"/>
		<if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
    </select>

   <update id="batchUpdateTraCourse" parameterType="list">
       <foreach collection="list" item="t" index="index" open="" close="" separator=";">
        UPDATE train.tra_course SET
	        is_enable = #{t.isEnable},
	        update_by = #{t.updateBy} ,
	        update_time = now() 
        WHERE 
	        id = #{t.id} 
	    </foreach>
	</update>
	
	 <select id="getTraCourseInfo" resultType="map" >
        SELECT
       (SELECT count(1)
        FROM train.tra_course_courseware,train.tra_courseware
        WHERE train.tra_course.id = train.tra_course_courseware.course_id
        AND train.tra_courseware.id = train.tra_course_courseware.courseware_id
        AND train.tra_courseware.is_enable = '1'
        AND train.tra_course_courseware.is_required = '1') count_is_required,
       (SELECT count(1)
       FROM train.tra_course_courseware,train.tra_courseware
       WHERE train.tra_course.id = train.tra_course_courseware.course_id
       AND train.tra_courseware.id = train.tra_course_courseware.courseware_id
       AND train.tra_courseware.is_enable = '1'
       AND tra_course_courseware.is_required = '0') count_is_not_required,
      train. tra_course.course_name, round(train. tra_course.time_limit/60,1) as time_limit,train. tra_course.id
      FROM train.tra_course where train.tra_course.is_enable ='1' ORDER BY train.tra_course.id  desc  
    </select>
    
    <select id="getAllCoursesLearningInfo" resultType="map" >
       SELECT 
      (SELECT count(1) FROM train.tra_learning_progress WHERE 
      train.tra_learning_progress.course_id = train.tra_course."id"
      AND train.tra_learning_progress.course_status != '2') courseLearningCount,
      train.tra_course.id,train.tra_course.course_name
      FROM train.tra_course WHERE train.tra_course.is_enable = '1'
      ORDER BY  train.tra_course."id"    
    </select>
    
    <!-- 查询有效的课程信息 -->
    <select id="queryCourse" resultType="map">
		SELECT
			C . ID,
			C .course_name,
			C .time_limit,
			C .is_enable,
			C .remark
		FROM
			train.tra_course C
		WHERE
			C .is_enable = '1'
	</select>

    <select id="getCourseVOByStudentId" resultMap="TraCourse" parameterType="int">
        SELECT
        <include refid="tracourseColumns"/>
        FROM train.tra_course
        WHERE id=(
            SELECT course_id
            FROM train.tra_learning_progress
            WHERE student_id=#{studentId}
            AND course_status IN('0','1','3')
            AND progress_type IN('0','1')
            ORDER BY id DESC
			LIMIT 1
        )
    </select>
	
</mapper>


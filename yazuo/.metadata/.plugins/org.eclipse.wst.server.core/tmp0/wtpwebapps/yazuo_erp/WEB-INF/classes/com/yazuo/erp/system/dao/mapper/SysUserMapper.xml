<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 判断是插入哪个数据库 -->

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.yazuo.erp.system.dao.SysUserDao">

	<resultMap id="SysUser" type="com.yazuo.erp.system.vo.SysUserVO">
		<result property="id" column="id" />
		<result property="userName" column="user_name" />
		<result property="tel" column="tel" />
		<result property="password" column="password" />
		<result property="genderType" column="gender_type" />
		<result property="userImage" column="user_image" />
		<result property="birthday" column="birthday" />
		<result property="positionId" column="position_id" />
		<result property="isFormal" column="is_formal" />
		<result property="loginTime" column="login_time" />
		<result property="loginFrequency" column="login_frequency" />
		<result property="isEnable" column="is_enable" />
		<result property="remark" column="remark" />
		<result property="insertBy" column="insert_by" />
		<result property="insertTime" column="insert_time" />
		<result property="updateBy" column="update_by" />
		<result property="updateTime" column="update_time" />
		<result property="firstLoginTime" column="first_login_time" />
		<result property="lastLoginTime" column="last_login_time" />
		<result property="resources" column="resources" />
	</resultMap>
	
	<!-- 用于直接执行sql脚本 -->
	<select id="runSqlScript" parameterType="com.yazuo.erp.demo.vo.SQLAdapter" resultType="map">
	  ${sql} 
	</select>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="sysuserColumns">
	    <![CDATA[
		id,user_name,tel,password,gender_type,user_image,birthday,position_id,is_formal,login_time,login_frequency,is_enable,remark,insert_by,insert_time,update_by,update_time
	    ]]>
	</sql>

	<sql id="tempUserColumns">
	    <![CDATA[
		u.id,u.user_name,u.tel,u.password,u.gender_type,u.user_image,u.birthday,u.position_id
	    ]]>
	</sql>
	<!-- 用户登录成功时查询用户用户的资源 -->
	<select id="getSysResourceByParentIdAndPrivilege" resultType="map"
		parameterType="map">
		SELECT sys.sys_resource.*
		FROM sys.sys_resource
		WHERE
		parent_id = #{parentId} and is_visible ='1'
		and exists (select 1
		from (select sys.sys_role_resource.id
		from sys.sys_role_resource
		where exists (select 1
		from sys.sys_user_role
		where sys.sys_user_role.role_id =
		sys.sys_role_resource.role_id
		and sys.sys_user_role.user_id = ${userId})) temp_user_resource
		where sys.sys_resource.id = temp_user_resource.id)
	</select>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="saveSysUser" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO sys.sys_user (
        		user_name ,
        		tel ,
        		password ,
        		gender_type ,
        		user_image ,
        		birthday ,
        		position_id ,
        		is_formal ,
        		login_time ,
        		login_frequency ,
        		is_enable ,
        		remark ,
        		insert_by ,
        		insert_time ,
        		update_by ,
        		update_time 
        ) VALUES (
        	#{userName} ,
        	#{tel} ,
        	#{password} ,
        	#{genderType} ,
        	#{userImage} ,
        	#{birthday} ,
        	#{positionId} ,
        	#{isFormal} ,
        	#{loginTime} ,
        	#{loginFrequency} ,
        	#{isEnable} ,
        	#{remark} ,
        	#{insertBy} ,
        	#{insertTime} ,
        	#{updateBy} ,
        	#{updateTime} 
        )
    ]]>
	</insert>

	<update id="updateSysUser">
        UPDATE sys.sys_user 
 		  <set>
	        <if test="userName!=null and userName!=''">user_name = #{userName} ,</if>
	        <if test="tel!=null and tel!=''">tel = #{tel} ,</if>
	        <if test="password!=null and password!=''">password = #{password} ,</if>
	        <if test="genderType!=null and genderType!=''">gender_type = #{genderType} ,</if>
	        <if test="userImage!=null and userImage!=''">user_image = #{userImage} ,</if>
	        <if test="birthday!=null and birthday!=''">birthday = #{birthday} ,</if>
	        <if test="positionId!=null ">position_id = #{positionId} ,</if>
	        <if test="isFormal!=null and isFormal!=''">is_formal = #{isFormal} ,</if>
	        <if test="loginTime!=null ">login_time = #{loginTime} ,</if>
	        <if test="loginFrequency!=null ">login_frequency = #{loginFrequency} ,</if>
	        <if test="isEnable!=null and isEnable!=''">is_enable = #{isEnable} ,</if>
	        <if test="remark!=null and remark!=''">remark = #{remark} ,</if>
	        <if test="firstLoginTime!=null ">first_login_time = #{firstLoginTime} ,</if>
	        <if test="lastLoginTime!=null ">last_login_time = #{lastLoginTime} ,</if>
	        <if test="insertBy!=null ">insert_by = #{insertBy} ,</if>
	        <if test="insertTime!=null ">insert_time = #{insertTime} ,</if>
	        <if test="updateBy!=null ">update_by = #{updateBy} ,</if>
	        <if test="updateTime!=null ">update_time = now() </if>
	      </set>  
        WHERE 
	        id = #{id} 
	</update>

	<update id="updateSysUserPWD">
    <![CDATA[
        UPDATE sys.sys_user SET
	        user_name = #{userName} ,
	        tel = #{tel} ,
	        password = #{password} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

	<update id="deleteSysUser">
    <![CDATA[
       update sys.sys_user set is_enable = '0' where id = #{id} 
    ]]>
	</update>

	<select id="getSysUserById" resultMap="SysUser">
		SELECT
		<include refid="sysuserColumns" />
	    <![CDATA[
		    FROM sys.sys_user 
	        WHERE 
		        id = #{id} and is_enable = '1'
	    ]]>
	</select>

	<!-- 通过手机号和状态查找用户 -->
	<select id="getSysUserByTelAndStatus" resultMap="SysUser"
		parameterType="SysUserVO">
		SELECT
		<include refid="sysuserColumns" />
	    <![CDATA[
		    FROM sys.sys_user   
	        WHERE 
		        tel = #{tel} 
	    ]]>
		<if test="isEnable!=null">
			and is_enable = #{isEnable}
		</if>
	</select>

	<!-- 通过手机号和密码查找用户 -->
	<select id="getSysUserByTelAndPWD" resultMap="SysUser"
		parameterType="SysUserVO">
		SELECT
		<include refid="sysuserColumns" />
	    <![CDATA[
		    FROM sys.sys_user   
	        WHERE 
		        tel = #{tel} and password = #{password}
	    ]]>
	</select>

	<select id="getSysUsers" resultMap="SysUser" parameterType="map">
		SELECT
		<include refid="sysuserColumns" />
	    <![CDATA[
		    FROM sys.sys_user u 
	    ]]>
		<include refid="sysuser_findPage_where" />
		<if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<!-- 同上，唯一不同为返回值对于每一个元素是一个原生的map -->
	<select id="getSysUsersMap" resultType="map" parameterType="map">
		SELECT
		<include refid="sysuserColumns" />
	    <![CDATA[
		    FROM sys.sys_user u 
	    ]]>
		<include refid="sysuser_findPage_where" />
		<if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	    <![CDATA[
		     limit #{pageSize} offset #{offset}; 
	    ]]>
	</select>

	<select id="getAllSysUsers" resultType="map" parameterType="map">
		select p.id as position_id, p.position_name, temp_u_ur.role_id,
		temp_u_ur.role_name, u.*
		from sys.sys_user u
		LEFT JOIN sys.sys_position p on (u.position_id = p.id and p.is_enable='1'
		)
		LEFT JOIN (select ur.user_id, r.role_name, r.id as role_id
		from sys.sys_user_role ur INNER JOIN sys.sys_role r on r.id = ur.role_id)
		temp_u_ur
		ON (u.id =temp_u_ur.user_id)
		<include refid="sysuser_findPage_where" />
		ORDER BY u.id desc
	</select>

	<resultMap id="complexUser" type="com.yazuo.erp.system.vo.SysUserVO">
		<id property="id" column="id" />
		<result property="userName" column="user_name" />
		<result property="tel" column="tel" />
		<result property="password" column="password" />
		<result property="genderType" column="gender_type" />
		<result property="userImage" column="user_image" />
		<result property="birthday" column="birthday" />
		<result property="positionId" column="position_id" />
		<result property="resources" column="resources" />
		<association property="position" javaType="SysPositionVO">
			<result property="id" column="position_id" />
			<result property="positionName" column="position_name" />
		</association>
		<collection property="listRoles" column="role_id" ofType="SysRoleVO">
			<id property="id" column="role_id" />
			<result property="roleName" column="role_name" />
		</collection>
	</resultMap>

	<!-- 效率高，但是有分页问题 : @@处为需要分页替换的部分 -->
	<select id="getComplexSysUsersByJoin" resultMap="complexUser"
		parameterType="map">
		select u.id as alais_id, p.id as position_id, p.position_name as
		position_name,
		temp_u_ur.role_id as role_id, temp_u_ur.role_name as role_name, u.*
		from (select * from sys.sys_user
		<include refid="sysuser_findPage_where" />
		@@) u
		LEFT JOIN (select ur.user_id, r.role_name, r.id as role_id
		from sys.sys_user_role ur INNER JOIN sys.sys_role r on r.id = ur.role_id)
		temp_u_ur
		ON (u.id =temp_u_ur.user_id)
		LEFT JOIN sys.sys_position p on (u.position_id = p.id and p.is_enable='1')
		ORDER BY alais_id desc
	</select>

	<resultMap id="complexUserResult" type="com.yazuo.erp.system.vo.SysUserVO">
		<id property="id" column="id" />
		<result property="userName" column="user_name" />
		<result property="tel" column="tel" />
		<result property="password" column="password" />
		<result property="genderType" column="gender_type" />
		<result property="userImage" column="user_image" />
		<result property="birthday" column="birthday" />
		<result property="positionId" column="position_id" />
		<result property="isFormal" column="is_formal" />
		<result property="loginTime" column="login_time" />
		<result property="loginFrequency" column="login_frequency" />
		<result property="isEnable" column="is_enable" />
		<result property="remark" column="remark" />
		<result property="insertBy" column="insert_by" />
		<result property="insertTime" column="insert_time" />
		<result property="updateBy" column="update_by" />
		<result property="updateTime" column="update_time" />
		<result property="groupName" column="group_name" />
		<association property="position" column="position_id"
			select="selectPosition" />
		<collection property="listRoles" column="id" ofType="SysRoleVO"
			select="selectRoles" />
	</resultMap>
	<!-- 有n+1 的问题,没有分页问题 -->
	<select id="getComplexSysUsers" parameterType="map"
		resultMap="complexUserResult">
		SELECT u.*,g.group_name from sys.sys_user u
		 inner join  sys.sys_group_user gu on (gu.user_id=u.id) INNER JOIN sys.sys_group g on (g.id = gu.group_id)
		<include refid="sysuser_findPage_where" />
		and u.is_enable = '1'
		ORDER BY u.id desc
	</select>
	<select id="getComplexSysUsersForBes" parameterType="map" resultMap="complexUser">
		SELECT array_to_string(
			ARRAY (
				SELECT ssr.resource_name from  sys.sys_resource as ssr where parent_tree_code like '006007' AND is_visible='1' 
         AND exists
				 (select 1
				          from (select sys.sys_user_role.user_id
				                  from sys.sys_user_role, sys.sys_role_resource
				                 where sys.sys_user_role.role_id =
				                       sys.sys_role_resource.role_id and 
										exists (select 1 from sys.sys_resource
		                                 where  sys.sys_role_resource.resource_id =  sys.sys_resource.id 
		                                 and sys.sys_resource.remark = ssr.remark)
				                  ) as temp_role_resource
				   where temp_role_resource.user_id = u.id  ) 
			),
			','
		) as resources ,u.* from sys.sys_user u 
		<include refid="sysuser_findPage_where" />
		and u.is_enable = '1'
		ORDER BY u.id desc
	</select>

	<select id="selectPosition" parameterType="int" resultType="SysPositionVO">
		SELECT p.id as id, p.position_name as positionName FROM
		sys.sys_position p WHERE p.is_enable='1' and p.id = #{id}
	</select>
	<select id="selectRoles" parameterType="int" resultType="SysRoleVO">
		select
		r.role_name as roleName, r.id as id
		from sys.sys_user_role ur INNER JOIN sys.sys_role r on r.id = ur.role_id
		and ur.user_id = #{id}
	</select>

	<!-- 逻辑同上，前端服务模块调用， 通过资源 remark 查询 所有拥有该资源的用户 -->
	 <select id="getAllUsersByResourceCode" resultMap="com.yazuo.erp.system.dao.SysUserDao.SysUser">
		SELECT '' as password, sys.sys_user.*
		  FROM sys.sys_user 
		 WHERE is_enable = '1'
		   and exists
		 (select 1
		          from (select sys.sys_user_role.user_id
		                  from sys.sys_user_role, sys.sys_role_resource
		                 where sys.sys_user_role.role_id =
		                       sys.sys_role_resource.role_id and 
								exists (select 1 from sys.sys_resource
                                 where  sys.sys_role_resource.resource_id =  sys.sys_resource.id 
                                 and sys.sys_resource.remark = #{remark})
		                  ) as temp_role_resource
		         where temp_role_resource.user_id = sys.sys_user.id  ) 
	</select>
	<sql id="sysuser_findPage_where">
		<where>
			<if test="userName!=null and userName !=''">
				AND u.user_name like '%'||#{userName}||'%'
			</if>
			<if test="tel!=null and tel !=''">
				AND u.tel like ''||#{tel}||'%'
			</if>
			<if test="positionId!=null and positionId !='' and positionId !=0">
				AND u.position_id = #{positionId}
			</if>
			<if test="1==1">
				AND u.is_enable = '1'
			</if>
			<if test="remark!=null and remark!=''">
				AND exists
				 (select 1
				          from (select sys.sys_user_role.user_id
				                  from sys.sys_user_role, sys.sys_role_resource
				                 where sys.sys_user_role.role_id =
				                       sys.sys_role_resource.role_id and 
										exists (select 1 from sys.sys_resource
		                                 where  sys.sys_role_resource.resource_id =  sys.sys_resource.id 
		                                 and sys.sys_resource.remark = #{remark})
				                  ) as temp_role_resource
				   where temp_role_resource.user_id = u.id  ) 
			</if>
		</where>
	</sql>

	<select id="getSysUserCount" resultType="long">
		SELECT count(*) FROM sys.sys_user u
		<include refid="sysuser_findPage_where" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findSysUserPage" resultMap="SysUser">
		SELECT
		<include refid="sysuserColumns" />
		FROM sys.sys_user u
		<include refid="sysuser_findPage_where" />
		<if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="isSameUserByPhone" resultType="long" parameterType="string">
		SELECT count(*) FROM sys.sys_user where tel = #{tel} and is_enable =
		'1'
	</select>

	<select id="getUserByGroupId" resultType="map">	
	   SELECT u.id, u.user_name,p.position_name,gu.group_id, s_g.group_name FROM sys.sys_user
		u inner join sys.sys_group_user gu on (u.id = gu.user_id)
      left JOIN sys.sys_group s_g on gu.group_id = s_g.id
		left JOIN sys.sys_position p on (u.position_id = p.id)
		where u.is_enable = '1'
		<if test="groupId!=null and groupId !=''">
			AND gu.group_id = #{groupId}
		</if>
	</select>

	<select id="getManagerByUserId" resultType="map" parameterType="map">
		SELECT DISTINCT(user_id),group_id from sys.sys_group_managers gm INNER
		JOIN sys.sys_user u
		on (u.id = gm.base_user_id) where u.is_enable='1'
		AND gm.base_user_id=#{userId} and gm.manager_type=#{managerType}
	</select>

	<select id="getGroupIdByUserId" resultType="map" parameterType="Integer">
		SELECT gu.group_id, g.group_name from sys.sys_group_user gu INNER JOIN
		sys.sys_group g
		on (gu.group_id = g.id) where g.is_enable ='1' and gu.user_id =
		#{userId}
	</select>

	<select id="getRoleIdByUserId" resultType="string"
		parameterType="Integer">
		select role_id from sys.sys_user_role where user_id = #{userId}
	</select>

	<update id="deleteMany" parameterType="java.util.List">
		update sys.sys_user set is_enable = '0' where id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item.id}
		</foreach>
	</update>
	<delete id="deleteUserAndDeptRelation">
	    <![CDATA[
	        DELETE FROM sys.sys_group_user WHERE user_id = #{id} 
	    ]]>
	</delete>
	<delete id="deleteGroupManagersRelation">
	    <![CDATA[
	        DELETE FROM sys.sys_group_managers WHERE base_user_id = #{id} 
	    ]]>
	</delete>
	<delete id="deleteUserAndRoleRelation">
	    <![CDATA[
	        DELETE FROM sys.sys_user_role WHERE user_id = #{id} 
	    ]]>
	</delete>

	<insert id="saveUserAndRoleRelation" parameterType="map">
		INSERT INTO sys.sys_user_role (
		user_id ,
		role_id ,
		insert_by ,
		insert_time
		) VALUES
		<foreach collection="list" index="index" item="item"
			separator=",">
			(
			#{item.userId} ,
			#{item.roleId} ,
			#{item.insertBy} ,
			#{item.insertTime}
			)
		</foreach>
	</insert>

	<insert id="saveUserAndDeptRelation" parameterType="java.util.List">
		INSERT INTO sys.sys_group_user (
		group_id ,
		user_id ,
		insert_by ,
		insert_time
		) VALUES
		<foreach collection="list" index="index" item="item"
			separator=",">
			(#{item.groupId} ,#{item.userId} ,#{item.insertBy} ,#{item.insertTime} )
		</foreach>
	</insert>

	<insert id="saveGroupManagersRelation" parameterType="map">
		INSERT INTO sys.sys_group_managers (
		base_user_id ,
		user_id ,
		group_id ,
		manager_type ,
		insert_by ,
		insert_time
		) VALUES
		<foreach collection="list" index="index" item="item"
			separator=",">
			(#{item.baseUserId} ,
			#{item.userId} ,
			#{item.groupId} ,
			#{item.managerType} ,
			#{item.insertBy} ,
			#{item.insertTime} )
		</foreach>
	</insert>

	<!-- 判断是否存在师生关系 -->
	<select id="judgeExistsEnableRelation" parameterType="java.lang.Integer"
		resultType="long">
		select count(*) from train.tra_teacher_student where teacher_id = #{id} and
		is_enable ='1'
	</select>
	<!-- 解除师生关系 -->
	<update id="deleteTeacherRelation">
	    <![CDATA[
	       update train.tra_teacher_student set is_enable = '0' where teacher_id = #{id} 
	    ]]>
	</update>

	<select id="getSysUserByTelAndStatusList"  parameterType="list" resultType="map">
		SELECT
		id,tel
		FROM
		sys.sys_user
		WHERE
		is_enable = '1'
		AND tel in
		<foreach collection="list" item="t" open="(" close=")" separator=",">
			#{t, jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 查询所有的有效用户 -->
	<select id="getSysUserList" resultMap="SysUser">
		SELECT *
		    FROM sys.sys_user   
	        WHERE 1=1
			and is_enable = '1'
	</select>
	
	<!-- 根据部门ID列表查询老员工列表 -->
	<select id="getSysUserByGroupIdList" parameterType="list" resultMap="SysUser">
		SELECT
			u. ID,
			u.user_name,
			u.tel,
			u. PASSWORD,
			u.gender_type,
			u.user_image,
			u.birthday,
			u.position_id,
			u.is_formal,
			u.login_time,
			u.login_frequency,
			u.is_enable,
			u.remark,
			u.insert_by,
			u.insert_time,
			u.update_by,
			u.update_time
		FROM
			sys.sys_user u
		LEFT JOIN sys.sys_group_user gu ON u. ID = gu.user_id
		WHERE
			1 = 1
		AND u.is_formal = '1'
		AND gu.group_id IN
		<foreach collection="list" item="t" index="index" open="(" close=")" separator=",">
	       #{t,jdbcType=INTEGER}
	    </foreach>
    </select>
    
    <!-- 根据职位ID列表查询老员工列表 -->
	<select id="getSysUserByPositionIdList" parameterType="list" resultMap="SysUser">
		SELECT
			u. ID,
			u.user_name,
			u.tel,
			u. PASSWORD,
			u.gender_type,
			u.user_image,
			u.birthday,
			u.position_id,
			u.is_formal,
			u.login_time,
			u.login_frequency,
			u.is_enable,
			u.remark,
			u.insert_by,
			u.insert_time,
			u.update_by,
			u.update_time
		FROM
			sys.sys_user u
		WHERE
			1 = 1
		AND u.is_formal = '1'
		AND u.position_id IN
		<foreach collection="list" item="t" index="index" open="(" close=")" separator=",">
	       #{t,jdbcType=INTEGER}
	    </foreach>
    </select>
    
    <!-- 查询老员工信息 -->
	<select id="getFormalSysUserList" resultMap="SysUser" parameterType="map">
		SELECT *
		    FROM sys.sys_user   
	        WHERE 1=1
	        AND is_formal = '1'
			AND is_enable = '1'
			
		<if test="flag!=null and flag=='1' ">
			AND	id not in (
				SELECT DISTINCT
					P .student_id
				FROM
					train.tra_exam_paper P
				WHERE
					1 = 1
				AND P .courseware_id = #{coursewareId,jdbcType=INTEGER}
				AND P .paper_status = '3'
			)	
		</if>
		
		order by id desc
	</select>
	
	<!-- 根据用户ID查询详细信息 -->
	<select id="getUserInfoById" resultType="map" parameterType="int">
		SELECT
			s. ID,
			s.user_name,
			s.tel,
			s.position_id,
			P .position_name,
			gu.group_id,
			G .group_name
		FROM
			sys.sys_user s
		LEFT JOIN sys.sys_position P ON P . ID = s.position_id
		LEFT JOIN sys.sys_group_user gu ON gu.user_id = s. ID
		LEFT JOIN sys.sys_group G ON G . ID = gu.group_id
		WHERE
			1 = 1
		AND s.is_enable = '1'
		AND s. ID =	#{id,jdbcType=INTEGER}
		ORDER BY
			s. ID DESC
	</select>
	
	<!-- 判断用户是否具有指定remark权限 -->
	<select id="checkPermission" resultType="int" parameterType="map">
		SELECT
			COUNT(1)
		FROM
			sys.sys_user u
		LEFT JOIN sys.sys_user_role ur ON ur.user_id = u. ID
		LEFT JOIN sys.sys_role r ON r. ID = ur.role_id
		LEFT JOIN sys.sys_role_resource rr ON rr.role_id = r. ID
		LEFT JOIN sys.sys_resource s ON s. ID = rr.resource_id
		WHERE
			1 = 1 
		AND u. ID = #{userId,jdbcType=INTEGER}
		AND s.remark = #{permissionRemark,jdbcType=VARCHAR}
	</select>

	<select id="getUsersByIds" resultMap="SysUser">
		SELECT *
		FROM sys.sys_user
		WHERE  id in <foreach collection="userIds" open="(" close=")" separator="," item="id">#{id}</foreach>
	</select>

	<select id="getAllUsersByPositionIds" resultMap="SysUser">
       SELECT *
       FROM sys.sys_user
       WHERE position_id in
		<foreach collection="positionIds" item="positionId" open="(" close=")" separator=",">#{positionId}</foreach>
	</select>
</mapper>


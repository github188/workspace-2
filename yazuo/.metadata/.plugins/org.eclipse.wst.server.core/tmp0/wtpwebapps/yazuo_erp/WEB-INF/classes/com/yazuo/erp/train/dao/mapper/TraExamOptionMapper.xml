<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


	<!-- 判断是插入哪个数据库 -->

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.yazuo.erp.train.dao.TraExamOptionDao">

	<resultMap id="TraExamOption" type="com.yazuo.erp.train.vo.TraExamOptionVO">
        <result property="id" column="id"/>
        <result property="examDtlId" column="exam_dtl_id"/>
        <result property="optionContent" column="option_content"/>
        <result property="attachmentId" column="attachment_id"/>
        <result property="refAnswer" column="ref_answer"/>
        <result property="isAnswer" column="is_answer"/>
        <result property="isSelected" column="is_selected"/>
        <result property="insertBy" column="insert_by"/>
        <result property="insertTime" column="insert_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="traexamoptionColumns">
	    <![CDATA[
		id,exam_dtl_id,option_content,attachment_id,ref_answer,is_answer,is_selected,insert_by,insert_time,update_by,update_time
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="saveTraExamOption" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO train.tra_exam_option (
        		exam_dtl_id ,
        		option_content ,
        		attachment_id ,
        		ref_answer ,
        		is_answer ,
        		is_selected ,
        		insert_by ,
        		insert_time ,
        		update_by ,
        		update_time 
        ) VALUES (
        	#{examDtlId} ,
        	#{optionContent} ,
        	#{attachmentId} ,
        	#{refAnswer} ,
        	#{isAnswer} ,
        	#{isSelected} ,
        	#{insertBy} ,
        	#{insertTime} ,
        	#{updateBy} ,
        	#{updateTime} 
        )
    ]]>
	</insert>
	
	<update id="updateTraExamOption" >
    <![CDATA[
        UPDATE train.tra_exam_option SET
	        exam_dtl_id = #{examDtlId} ,
	        option_content = #{optionContent} ,
	        attachment_id = #{attachmentId} ,
	        ref_answer = #{refAnswer} ,
	        is_answer = #{isAnswer} ,
	        is_selected = #{isSelected} ,
	        insert_by = #{insertBy} ,
	        insert_time = #{insertTime} ,
	        update_by = #{updateBy} ,
	        update_time = #{updateTime} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="deleteTraExamOption">
    <![CDATA[
        DELETE FROM train.tra_exam_option WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getTraExamOptionById" resultMap="TraExamOption">
		SELECT <include refid="traexamoptionColumns" />
	    <![CDATA[
		    FROM train.tra_exam_option 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

    <select id="getTraExamOptionByExamDtlIds" resultMap="TraExamOption" parameterType="list">
        SELECT <include refid="traexamoptionColumns"/>
        FROM train.tra_exam_option
        WHERE exam_dtl_id in
        <foreach collection="list" item="examDtlId" open="(" close=")" separator=",">#{examDtlId}</foreach>
    </select>

	<select id="getTraExamOptions" resultMap="TraExamOption" parameterType="map">
		SELECT <include refid="traexamoptionColumns" />
	    <![CDATA[
		    FROM train.tra_exam_option  
	    ]]>
	    <include refid="traexamoption_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	    <![CDATA[
		     limit #{pageSize} offset #{offset}; 
	    ]]>
	</select>
	
	<!-- 同上，唯一不同为返回值对于每一个元素是一个原生的map -->
	<select id="getTraExamOptionsMap" resultType="map" parameterType="map">
		SELECT <include refid="traexamoptionColumns" />
	    <![CDATA[
		    FROM train.tra_exam_option  
	    ]]>
	    <include refid="traexamoption_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	    <![CDATA[
		     limit #{pageSize} offset #{offset}; 
	    ]]>
	</select>
	
	<select id="getAllTraExamOptions" resultMap="TraExamOption">
		SELECT <include refid="traexamoptionColumns" />
		FROM train.tra_exam_option
	    <include refid="traexamoption_findPage_where" />
	    <if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
	</select>
    <insert id="batchInsertExamOptionVO" parameterType="list">
        INSERT INTO train.tra_exam_option (
        		exam_dtl_id ,
        		option_content ,
        		attachment_id ,
        		ref_answer ,
        		is_answer ,
        		is_selected ,
        		insert_by ,
        		insert_time ,
        		update_by ,
        		update_time
        ) VALUES
         <foreach collection="list" item="t" separator=",">
         (
        	#{t.examDtlId} ,
        	#{t.optionContent} ,
        	#{t.attachmentId} ,
        	#{t.refAnswer} ,
        	#{t.isAnswer} ,
        	#{t.isSelected} ,
        	#{t.insertBy} ,
        	#{t.insertTime} ,
        	#{t.updateBy} ,
        	#{t.updateTime}
        )
         </foreach>
    </insert>

    <update id="batchUpdateExamOptionForSelected" parameterType="list">
        UPDATE train.tra_exam_option
        SET is_selected='1' WHERE id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </update>

    <update id="batchUpdateExamOptionForNonSelected" parameterType="list">
        UPDATE train.tra_exam_option
        SET is_selected='0' WHERE id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </update>

    <select id="getExamOptionVOByPaperIdAndpptId" resultMap="TraExamOption">
        SELECT <include refid="traexamoptionColumns"/>
        FROM train.tra_exam_option
        WHERE exam_dtl_id =(
             SELECT id
             FROM train.tra_exam_dtl
             WHERE paper_id=#{examPaperId} AND ppt_id=#{pptId}
        )
    </select>

    <sql id="traexamoption_findPage_where">
		<where>	      				
	       <if test="id!=null">
				AND id = #{id}
			</if>
	       <if test="examDtlId!=null">
				AND exam_dtl_id = #{examDtlId}
			</if>
	       <if test="optionContent!=null">
				AND option_content = #{optionContent}
			</if>
	       <if test="attachmentId!=null">
				AND attachment_id = #{attachmentId}
			</if>
	       <if test="refAnswer!=null">
				AND ref_answer = #{refAnswer}
			</if>
	       <if test="isAnswer!=null">
				AND is_answer = #{isAnswer}
			</if>
	       <if test="isSelected!=null">
				AND is_selected = #{isSelected}
			</if>
	       <if test="insertBy!=null">
				AND insert_by = #{insertBy}
			</if>
	       <if test="insertTimeBegin!=null">
				AND insert_time >= #{insertTimeBegin}
		   </if>
		   <if test="insertTimeEnd!=null">
				AND insert_time &lt;= #{insertTimeEnd}
		   </if>
	       <if test="updateBy!=null">
				AND update_by = #{updateBy}
			</if>
	       <if test="updateTimeBegin!=null">
				AND update_time >= #{updateTimeBegin}
		   </if>
		   <if test="updateTimeEnd!=null">
				AND update_time &lt;= #{updateTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="getTraExamOptionCount" resultType="long">
        SELECT count(*) FROM train.tra_exam_option 
		<include refid="traexamoption_findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findTraExamOptionPage" resultMap="TraExamOption">
    	SELECT <include refid="traexamoptionColumns" />
	    FROM train.tra_exam_option 
		<include refid="traexamoption_findPage_where"/>
		<if test="sortColumns!=null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>


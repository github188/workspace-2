package com.yazuo.redisSpout;

import backtype.storm.Config;
import backtype.storm.LocalCluster;
import backtype.storm.generated.AlreadyAliveException;
import backtype.storm.generated.InvalidTopologyException;
import backtype.storm.topology.TopologyBuilder;

public class RedisSpoutTopology {
	public static void main(String[] args) throws AlreadyAliveException,
			InvalidTopologyException {
		TopologyBuilder builder = new TopologyBuilder();
		// set the spout class
		builder.setSpout("RedisStormSpout", new RedisStormSpout(), 1);
		// set the bolt class
		builder.setBolt("RedisStormBolt", new RedisStormBolt(), 2).shuffleGrouping("RedisStormSpout");
		
		builder.setBolt("es-bolt", new EsBolt("storm/docs"), 1).shuffleGrouping("RedisStormBolt");
		Config conf = new Config();
		conf.setDebug(true);
		// create an instance of LocalCluster class for
		// executing topology in local mode.
		LocalCluster cluster = new LocalCluster();

		// LearningStormTopolgy is the name of submitted topology.
		cluster.submitTopology("RedisStormToplogy", conf,
				builder.createTopology());
		try {
			Thread.sleep(3000);
		} catch (Exception exception) {
			System.out.println("Thread interrupted exception : " + exception);
		}
		// kill the LearningStormTopology
		cluster.killTopology("RedisStormToplogy");
		// shutdown the storm test cluster
		cluster.shutdown();

	}
}

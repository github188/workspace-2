<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>弹框</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Place favicon.ico and apple-touch-icon(s) in the root directory -->

    <link rel="stylesheet" href="../../asset/base.css">
    <script>
        var WIDGET_BASE_PATH = '../../widget/';
    </script>
    <script src="../../asset/third/jquery-1.11.1.js"></script>
    <script src="../../asset/third/avalon/avalon.js"></script>
    <script src="../../asset/avalon-ext.js"></script>
</head>
<body class="ms-controller" ms-controller="demo">
    <div class="demo-wrapper">
        <fieldset>
            <legend>dialog组件</legend>
                <button ms-click="show('aa')">打开对话框</button>
                <div ms-widget="dialog,aa,$aaOpts" id="dialog">
                    呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵
                </div>
        </fieldset>
        <button ms-click="addZIndex('aa')">add z-index</button>
        <fieldset>
            <legend>层上层</legend>
            <button ms-click="show('ss')">打开对话框</button>
            <div ms-widget="dialog,ss,$ssOpts">
                呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵
                发送到发送到发生发生地方撒旦法撒旦法师打发沙发垫发大水发撒旦飞洒发沙发沙发上大发发送到发送到发大水发送发生地方撒旦法撒旦法撒旦任务二期为热情污染物而犬瘟热日期日期额外人全文尔特我去惹人
                发送到发送到发生发生地方撒旦法撒旦法师打发沙发垫发大水发撒旦飞洒发沙发沙发上大发发送到发送到发大水发送发生地方撒旦法撒旦法撒旦任务二期为热情污染物而犬瘟热日期日期额外人全文尔特我去惹人
                <button ms-click="show('gg')">打开对话框</button>
                <div class="ms-controller" ms-controller="inner">
                    <div ms-widget="dialog,gg,$ggOpts">
                        换回来后就会很快更快更好感觉回来了黄金客户
                        发送到发送到发生发生地方撒旦法撒旦法师打发沙发垫发大水发撒旦飞洒发沙发沙发上大发发送到发送到发大水发送发生地方撒旦法撒旦法撒旦任务二期为热情污染物而犬瘟热日期日期额外人全文尔特我去惹人
                        <button ms-click="show('mm')">打开对话框</button>
                        <div ms-widget="dialog,mm,$mmOpts">
                            哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>警告框(模拟alert)</legend>
                <button ms-click="show('bb')">打开对话框</button>
                <div ms-widget="dialog,bb,$bbOpts">
                    呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵
                </div>
        </fieldset>

        <fieldset>
            <legend>设置dialog的宽度(默认为480)</legend>

            <button ms-click="show('ff')">打开对话框</button>
            <div ms-widget="dialog,ff, $ffOpts">
            呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵
            </div>
        </fieldset>

        <fieldset>
            <legend>可以从方法中执行的dialog</legend>
            <button ms-click="showCustomDialog('cus')">打开对话框</button>
            <button ms-click="changeDialog('cus')">改变对话框内容</button>
            <button ms-click="changeTitle('cus')">改变对话框title</button>
            <button ms-click="changeModel('cus')">改变对话框model</button>
        </fieldset>
    </div>


    <script>
        require("../../../widget/dialog/dialog", function(avalon) {
            var model = avalon.define("demo", function(vm) {
                var dialog;
                // 要求组件的配置项一定要放在组件的配置对象中，不可放在外部定义的controller，比如这里的demo
                // 注意配置选项绝不可以监控
                vm.$aaOpts = {
                    title: 'dialog title',
                    modal: false,
                    onClose: function(){
                        alert('执行了cancel')
                    }
                };
                vm.$ssOpts = {
                    title: "层上层的dialog",
                    onSubmit: function() {
                        alert("submit success !");
                        console.log(arguments);
                        console.log(this);
                    }
                };
                vm.$ggOpts = {
                    title: "gg dialog,在ss dialog之上",
                    showClose: false
                };
                vm.$mmOpts = {
                    title: "mm dialog 的tittle",
                    onSubmit: function() {
                        alert("确定操作，完成之后关闭弹窗");
                    },
                    onClose: function() {
                        alert("取消操作，完成之后关闭弹窗");
                    }
                };
                vm.$bbOpts = {
                    type: "alert",
                    showClose: true,
                    modal: false
                };
                vm.$ffOpts = {
                    type: "alert",
                    title: "改变dialog的宽度",
                    width: 300
                }
                vm.tpl = '我是tpl';
                vm.tpl2 = '我是tpl2';
                vm.show = function( id ){
                    avalon.vmodels[id].toggle = true;
                }
                /**
                 * 使用方法生成dialog
                 */
                vm.$customDialogOptions = {
                        title: 'customShow',
                        onSubmit: function() {alert("success !")},
                        type: 'alert'
                    };
                vm.showCustomDialog = function(id) {
                    if(!dialog) {
                        // 注意用户动态生成dialog时，需要配置dialog的id,options，model，和content，且属性名是固定的
                        var config = {
                            id: id,
                            model: "demo",
                            // dialog配置项的值必须是model下的对应配置属性名
                            options: "$customDialogOptions",
                            content: '呵呵呵呵 {{tpl}} '
                        }
                        dialog = avalon.dialog(config);
                    }
                    dialog.toggle = true;
                }
                /**
                 * 更改dialog的content
                 */
                vm.changeDialog = function(id) {
                    var dialog = avalon.vmodels[id];
                    if(!dialog) {
                        return;
                    }
                    dialog.setContent('{{tpl2}}');
                }
                /**
                 * 更改dialogtitle
                 */
                vm.changeTitle = function(id) {
                    var dialog = avalon.vmodels[id];
                    if(!dialog) {
                        return;
                    }
                    dialog.setTitle('我是title');
                };
                // setModel的参数就是个简单对象，不要监控
                vm.m = {
                    tpl2: '我变了',
                    $title: "改变title并且改变模板然后重新渲染",
                    $content: "改变modal的content{{tpl2}}",
                    $noScan: false // 是否需要扫描编译模板，需要编译则设为false或者不定义即可，不需要扫描设为true
                };
                vm.changeModel = function(id) {
                    var dialog = avalon.vmodels[id];
                    if(!dialog) {
                        return;
                    }
                    dialog.setModel(vm.m);
                };
                vm.addZIndex = function(id) {
                    avalon.vmodels[id].zIndex = 300;
                }
            });
            var innerModel = avalon.define("inner", function (vm) {
                vm.$ggOpts = {
                    title: "gg dialog,在ss dialog之上2222",
                    showClose: false
                };
            });
            avalon.scan();
        })
    </script>

</body>
</html>

